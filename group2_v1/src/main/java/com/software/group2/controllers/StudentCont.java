/**
 * 
 */
package com.software.group2.controllers;

import java.util.Optional;

/**
 * @author Austin
 *
 */
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.software.group2.entities.Student;
import com.software.group2.repos.StudentRepo;



@Controller    // This means that this class is a Controller
@RequestMapping(path="/student") // This means URL's start with /software (after Application path)
public class StudentCont {
	@Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private StudentRepo studentRepository;

	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewInst (@RequestParam String fname, @RequestParam String lname) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		Student n = new Student();
		n.setStudentFName(fname);
		n.setStudentLName(lname);
		studentRepository.save(n);
		return "Saved";
	}

	@GetMapping(path="/getall")
	public @ResponseBody Iterable<Student> getAllAdmins() {
		// This returns a JSON or XML with the users
		return studentRepository.findAll();
	}
	
	@GetMapping(path="/getone")
	public @ResponseBody Optional<Student> getOneAdmin(@RequestParam Integer id) {
		// This returns a JSON or XML with the admin
		return studentRepository.findById(id);
	}
}

